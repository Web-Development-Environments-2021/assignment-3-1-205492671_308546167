---
openapi: 3.0.0
info:
  title: Soccer API
  description: This is our soccer API project
  contact:
    email: naorsu@post.bgu.ac.il
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/Naorsu/soccerAPI/1.0.0
  description: SwaggerHub API Auto Mocking
- url: https://virtserver.swaggerhub.com/Naorsu/lab6/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /user/register:
    post:
      tags:
      - user
      summary: add a new user
      description: A json object that contains all user info is added to the data
      requestBody:
        description: User info to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        required: true
      responses:
        "201":
          description: User has been created
        "400":
          description: invalid input
        "409":
          description: User is already exists
  /user/login:
    post:
      tags:
      - user
      summary: login to server
      description: sends user name and password to verify to user cardntials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        "201":
          description: user is logged in and verified
        "400":
          description: invalid input
        "404":
          description: couldnt find user name matching that password
  /user/favorites/matches/{username}:
    get:
      tags:
      - user
      summary: get user's favorite matches
      description: return a list of user's favorite future matches
      parameters:
      - name: username
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: returns a list of matches succesfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/match'
        "404":
          description: Can not find the user
  /user/favorites/matches:
    put:
      tags:
      - user
      summary: update user's favorive matches
      description: sends user name and match id to append match to user's favorite matches list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
        required: true
      responses:
        "200":
          description: match has been successfuly added
        "400":
          description: invalid input
        "404":
          description: couldnt find user name or match id
  /user/favorites/players/{username}:
    get:
      tags:
      - user
      summary: get user's favorite players
      description: return a list of user's favorite players
      parameters:
      - name: username
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: returns a list of user's fav players succesfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/partial_player'
        "404":
          description: Can not find the user
  /user/favorites/players:
    put:
      tags:
      - user
      summary: update user's favorite player
      description: sends user name and player id to append player to user's favorite players list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_2'
        required: true
      responses:
        "200":
          description: player has been successfuly added
        "400":
          description: invalid input
        "404":
          description: couldnt find user name or player id
  /user/favorites/teams/{username}:
    get:
      tags:
      - user
      summary: get user's favorite teams
      description: return a list of user's favorite teams
      parameters:
      - name: username
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: returns a list of teams succesfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
        "404":
          description: Could not find the user
  /user/favorites/teams:
    put:
      tags:
      - user
      summary: update user's favorite team
      description: sends user name and team id to append team to user's favorite team list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_3'
        required: true
      responses:
        "200":
          description: team has been successfuly added
        "400":
          description: invalid input
        "404":
          description: couldnt find user name or team id
  /league:
    get:
      tags:
      - league
      summary: get league current summrized info
      description: returns an json object with current league params
      responses:
        "200":
          description: returns an json object with current league params
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: didnt find avilable data on league
  /player/page{player_id}:
    get:
      tags:
      - player
      summary: get player's page
      description: returns a json object with data to fill in the player's page
      parameters:
      - name: player_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: returns a json object with data to fill in the player's page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/player'
        "404":
          description: player_id not found
  /coach/page{coach_id}:
    get:
      tags:
      - coach
      summary: get coach's page
      description: returns a json object with data to fill in the coach's page
      parameters:
      - name: coach_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: returns a json object with data to fill in the coach's page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/coach'
        "404":
          description: coach_id not found
  /team/page{team_id}:
    get:
      tags:
      - team
      summary: get team's page
      description: returns a json object with data to fill in the team's page
      parameters:
      - name: team_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: returns a json object with data to fill in the team's page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team'
        "404":
          description: team_id not found
  /league/current_fixture:
    get:
      tags:
      - league
      summary: get league current fixture
      description: returns a json object with two arrays- array of pre played matches of the current fixture  and a array of post played matches of the current fixture
      responses:
        "200":
          description: returns a json object with two arrays- array of pre played matches of the current fixture  and a array of post played matches of the current fixture
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: didnt find avilable data on league
  /player/search:
    get:
      tags:
      - player
      summary: search player by name
      description: returns a json object with a list of players with the given name
      parameters:
      - name: player_name
        in: query
        description: Player full/partial name
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: Lionel Messi
      - name: sorted
        in: query
        description: The type of sort (by team name/by player name), if none present then won't sort
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: Messi
      - name: filtered_by
        in: query
        description: The type of filter (by player position or by team name)
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: position
      - name: filter
        in: query
        description: The value to filter
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: goalkeeper
      responses:
        "200":
          description: returns a json object with a list of players with the given name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "404":
          description: player_name not found
  /coach/search:
    get:
      tags:
      - coach
      summary: search coach by name
      description: returns a json object with a list of coaches with the given name
      parameters:
      - name: coach_name
        in: query
        description: The coach's full/partial name
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: sorted
        in: query
        description: The type of sort (by team name/by coach name), if none present then won't sort
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: Grant
      - name: filtered_by
        in: query
        description: The type of filter (by coach_position or by team_name)
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: team_name
      - name: filter
        in: query
        description: The value to filter
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: Maccabi Haifa
      responses:
        "200":
          description: returns a json object with a list of coaches with the given name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        "404":
          description: coach_name not found
  /team/search:
    get:
      tags:
      - team
      summary: search team by name
      description: returns a json object with a list of teams with the given name
      parameters:
      - name: team_name
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: sorted
        in: query
        description: The type of sort ('True'/'False') if 'Fasle' present then won't sort
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "True"
      responses:
        "200":
          description: returns a json object with a list of teams with the given name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        "404":
          description: team_name not found
components:
  schemas:
    user:
      required:
      - country
      - email
      - firstname
      - lastname
      - password
      - profile_picture
      - username
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: Must have 3-8 characters, letters only
          example: KingMessi
        firstname:
          type: string
          example: May
        lastname:
          type: string
          example: Suban
        country:
          type: string
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: Must have 5-10 characters, should contain at least one digit and one special character
          format: password
          example: my*pass21
        email:
          type: string
          format: email
          example: Suban@gmail.com
        profile picture:
          type: string
          description: Link to the profile image, recommended to add picture from cloudinary
          format: URL
          example: https://res.cloudinary.com/dswkzsdoq/image/upload/v1620738869/20171122_132608_zvrw97.jpg
    match:
      required:
      - away_team
      - date
      - home_team
      - match_id
      type: object
      properties:
        match_id:
          type: string
          description: unique match id
          example: RX23231F
        home_team:
          type: string
          description: The host team's name
        away_team:
          type: string
          description: The guest team's name
        date:
          type: string
          description: The match's date
          format: date
    player:
      required:
      - common_name
      - country
      - date_of_birth
      - fullname
      - height
      - nationality
      - picture
      - player_id
      - position_num
      - team_name
      type: object
      properties:
        player_id:
          type: string
          description: The player's id
        fullname:
          type: string
          description: The player's full name
        team_name:
          type: string
          description: The player's team name
        picture:
          type: string
          description: The player's url picture
          format: URL
        position_num:
          type: string
          description: Player's position number
        common_name:
          type: string
          description: The player's common name
        nationality:
          type: string
          description: The player's nationality
        date_of_birth:
          type: string
          description: The player's date of birth
          format: date
        country:
          type: string
          description: The player's country
        height:
          type: string
          description: The player's height
    partial_player:
      required:
      - fullname
      - picture
      - player_id
      - position_num
      - team_name
      type: object
      properties:
        player_id:
          type: string
          description: The player's id
        fullname:
          type: string
          description: The player's full name
        team_name:
          type: string
          description: The player's team name
        picture:
          type: string
          description: The player's url picture
          format: URL
        position_num:
          type: string
          description: Player's position number
    team:
      required:
      - matches
      - team_id
      - team_manager
      - team_players
      type: object
      properties:
        team_id:
          type: string
          description: The team's id
        team_players:
          type: array
          description: The players of the favorite players
          items:
            $ref: '#/components/schemas/partial_player'
        team_coach:
          $ref: '#/components/schemas/partial_coach'
        matches:
          type: array
          description: The team's matches
          items:
            $ref: '#/components/schemas/match'
    partial_team:
      required:
      - team_id
      - team_logo
      - team_name
      type: object
      properties:
        team_id:
          type: string
          description: The team's id
        team_name:
          type: string
          description: The team's name
        team_logo:
          type: string
          description: The url of team's logo image
          format: URL
    coach:
      required:
      - coach_id
      - common_name
      - country
      - date_of_birth
      - fullname
      - nationality
      - picture
      - team_name
      type: object
      properties:
        coach_id:
          type: string
          description: The coach's id
        fullname:
          type: string
          description: The coach's full name
        team_name:
          type: string
          description: The coach's team name
        picture:
          type: string
          description: The coach's url profile picture
          format: URL
        common_name:
          type: string
          description: The coach's common name
        nationality:
          type: string
          description: The coach's nationality
        date_of_birth:
          type: string
          description: The coach's date of birth
          format: date
        country:
          type: string
          description: The coach's country
    partial_coach:
      required:
      - coach_id
      - fullname
      - picture
      - team_name
      type: object
      properties:
        coach_id:
          type: string
          description: The coach's id
        fullname:
          type: string
          description: The coach's full name
        team_name:
          type: string
          description: The coach's team name
        picture:
          type: string
          description: The coach's url picture
          format: URL
    body:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: Must have 3-8 characters, letters only
          example: KingMessi
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: Must have 5-10 characters, should contain at least one digit and one special character
          format: password
          example: my*pass21
    body_1:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: Must have 3-8 characters, letters only
          example: KingMessi
        match_id:
          type: string
          description: must be unique match identitfier
          example: RX23231F
    body_2:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: Must have 3-8 characters, letters only
          example: KingMessi
        player_id:
          type: string
          description: must be unique player identitfier
          example: FP1010
    body_3:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: Must have 3-8 characters, letters only
          example: KingMessi
        player_id:
          type: string
          description: must be unique team identitfier
          example: TM1010
    inline_response_200:
      type: object
      properties:
        season_name:
          type: string
          description: current runnig season
          example: 2012/2013
        stage_name:
          type: string
          description: current runing fixture
          example: fixture 14
        match:
          $ref: '#/components/schemas/match'
    inline_response_200_1:
      type: object
      properties:
        pre_played_matches:
          type: array
          description: pre played matches
          items:
            $ref: '#/components/schemas/match'
        post_played_matches:
          type: array
          description: post played matches
          items:
            $ref: '#/components/schemas/match'
    inline_response_200_2:
      properties:
        search_player:
          type: array
          items:
            $ref: '#/components/schemas/partial_player'
    inline_response_200_3:
      properties:
        search_coach:
          type: array
          items:
            $ref: '#/components/schemas/partial_coach'
    inline_response_200_4:
      properties:
        search_team:
          type: array
          items:
            $ref: '#/components/schemas/partial_team'
